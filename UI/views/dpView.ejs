<!DOCTYPE html>
<html lang="pt-BR">

<head>
    <meta charset="UTF-8">
    <title>Resultados - LCS com Programação Dinâmica</title>
    <link href="https://cdn.jsdelivr.net/npm/@picocss/pico@2/css/pico.min.css" rel="stylesheet">
    <style>
        td {
            vertical-align: top;
            font-size: 0.9rem;
            padding: 0.5rem;
        }

        summary {
            font-size: 0.75rem;
            font-weight: bold;
            cursor: pointer;
        }

        .accordion-content {
            font-size: 0.75rem;
            color: var(--muted-color);
        }

        code {
            word-break: break-word;
        }

        table {
            width: 100%;
            overflow-x: auto;
        }

        article header {
            padding-bottom: 0;
        }
    </style>
</head>

<body>
    <main class="container">
        <h1>Resultados - LCS (Sem Backtracking)</h1>

        <% results.forEach((result, pairIndex)=> { %>
            <article>
                <header>
                    <h2>Par de Dados #<%= pairIndex + 1 %>
                    </h2>
                </header>

                <section>
                    <p><strong>1º Conjunto:</strong> <code><%= result.dataOne %></code></p>
                    <p><strong>2º Conjunto:</strong> <code><%= result.dataTwo %></code></p>
                </section>

                <section>
                    <h3>Subsequências Comuns Mais Longas</h3>
                    <ul>
                        <% result.sequences.forEach(seq=> { %>
                            <li><code><%= seq %></code></li>
                            <% }) %>
                    </ul>
                </section>

                <section>
                    <h3>Tabela resultante da Programação Dinâmica com Conjuntos (Sets)</h3>
                    <p>
                        Cada célula da tabela <code>dp[i][j]</code> armazena um <strong>conjunto de
                            subsequências</strong> comuns mais longas
                        entre os prefixos <code>data_one[0:i]</code> e <code>data_two[0:j]</code>.
                    </p>
                    <p>
                        A visualização apresenta:
                    </p>
                    <ul>
                        <li><strong>Corpo da célula:</strong> comprimento da LCS até o ponto atual (determinado pela
                            maior string do conjunto)</li>
                        <li><strong>Acordeão expansível:</strong> lista de todas as subsequências armazenadas no set
                            daquela célula</li>
                    </ul>
                    <p>
                        Como as subsequências são construídas iterativamente durante o preenchimento da matriz, não é
                        necessário um processo posterior de reconstrução via backtracking.
                    </p>


                    <div class="dp-table">
                        <table role="grid">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th></th>
                                    <% for (let j=0; j < result.dataTwo.length; j++) { %>
                                        <th>
                                            <%= result.dataTwo[j] %>
                                        </th>
                                        <% } %>
                                </tr>
                            </thead>
                            <tbody>
                                <% for (let i=0; i <=result.dataOne.length; i++) { %>
                                    <tr>
                                        <th>
                                            <%= i> 0 ? result.dataOne[i - 1] : '' %>
                                        </th>
                                        <% for (let j=0; j <=result.dataTwo.length; j++) { const
                                            len=result.dp[i][j].len; const seqs=result.dp[i][j].set; const
                                            isMax=len===result.maxLen; %>
                                            <td>
                                                <div><strong>
                                                        <%= len %>
                                                    </strong></div>
                                                <details>
                                                    <summary><small>
                                                            <%= seqs.length %> seq(s)
                                                        </small></summary>
                                                    <div class="accordion-content">
                                                        <% seqs.forEach(s=> { %>
                                                            <code><%= s %></code>
                                                            <% }) %>
                                                    </div>
                                                </details>
                                            </td>
                                            <% } %>
                                    </tr>
                                    <% } %>
                            </tbody>
                        </table>
                    </div>
                </section>
            </article>

            <% if (pairIndex < results.length - 1) { %>
                <hr>
                <% } %>
                    <% }) %>

                        <a href="/" role="button">← Voltar</a>
    </main>
</body>

</html>